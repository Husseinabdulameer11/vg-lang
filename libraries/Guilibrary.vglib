library Guilibrary {
    namespace window {
        function create(title, width, height) {
            ## Creates a new window instance using the MyGUI constructor
            return VgSystemCall("components.MyGUI", "<init>", title, width, height);
        }
        function launch(window) {
            ## Launches the given window (makes it visible)
            return VgSystemCall("components.MyGUI", "launch", window);
        }
        function setIcon(window, iconName) {
            ## Sets the window icon
            return VgSystemCall("components.MyGUI", "setWindowIcon", window, iconName);
        }
            function addComponentToWindow(window, component) {
                    ## Adds a component to the window
                    return VgSystemCall("components.MyGUI", "addComponentToWindow", window,window, component);
                }

          function setBackgroundColor(window, colorCode) {
                    var color = VgSystemCall("java.awt.Color", "decode", colorCode);
                    return VgSystemCall("components.MyGUI", "setWindowBackgroundColor", window, color);
                }
    }


    namespace popup {
        function info(window, message, title) {
            return VgSystemCall("components.MyGUI", "showInfoPopup", window, message, title);
        }
        function warning(window, message, title) {
            return VgSystemCall("components.MyGUI", "showWarningPopup", window, message, title);
        }
        function error(window, message, title) {
            return VgSystemCall("components.MyGUI", "showErrorPopup", window, message, title);
        }
    }
    namespace Callbacks {
        function onKey(msg, code) {
            print("Callbacks.onKey => msg: " + msg + ", code: " + code);
        }
    }
    namespace Button {
        function createButton(text, x, y, width, height) {
            return VgSystemCall("components.MyGUI$MyButton", "<init>", text, x, y, width, height);
        }
        function setButtonColor(button, colorCode) {
            var color = VgSystemCall("java.awt.Color", "decode", colorCode);
            return VgSystemCall("components.MyGUI$MyButton", "setButtonColor", button, color);
        }
    }
    namespace IOEvents {
        function setOnKeyPress(window, method) {
            return VgSystemCall("components.MyGUI", "setOnKeyPress", window, method);
        }
        function setOnClick(button, method) {
            return VgSystemCall("components.MyGUI$MyButton", "setOnClick", button, method);
        }
    }
    namespace Image{
       
        function createImage(imagePath, x, y, width, height) {
            return VgSystemCall("components.MyGUI$MyImage", "<init>", imagePath, x, y, width, height);
        }
    
        
        function setImage(imageComponent, imagePath) {
            return VgSystemCall("components.MyGUI$MyImage", "setImage", imageComponent, imagePath);
        }
    
      
        function moveImage(imageComponent, x, y) {
            return VgSystemCall("components.MyGUI$MyImage", "moveImage", imageComponent, x, y);
        }
    
        
        function resizeImage(imageComponent, width, height) {
            return VgSystemCall("components.MyGUI$MyImage", "resizeImage", imageComponent, width, height);
        }
    
       
        function addImageToWindow(window, imageComponent) {
            return VgSystemCall("components.MyGUI", "add", window, imageComponent);
        }
    }
    namespace Pane {
        function createPane(x, y, width, height) {
                return VgSystemCall("components.MyGUI$MyPane", "<init>", x, y, width, height);
             }
        function setPaneColor(pane, colorCode) {
                  var color = VgSystemCall("java.awt.Color", "decode", colorCode);
                   return VgSystemCall("components.MyGUI$MyPane", "setPaneColor", pane, color);
              }

        function addComponentToPane(pane, component) {
                  return VgSystemCall("components.MyGUI$MyPane", "add", pane, component);
            }
         function setPaneBounds(pane, x, y, width, height) {
                return VgSystemCall("components.MyGUI$MyPane", "setBounds", pane, x, y, width, height);
            }
            function setPaneBackgroundImage(images){
                return VgSystemCall("components.MyGUI$MyPane","setPaneBackgroundImage",images);
            }
            function setPaneBorder(pane, colorCode, thickness) {
                var color = VgSystemCall("java.awt.Color", "decode", colorCode);
                return VgSystemCall("components.MyGUI$MyPane", "setPaneBorder", pane, color, thickness);
            }
    }

    namespace Sound{
         ## Function to play a sound from a file
            function playSound(filePath) {
                return VgSystemCall("components.MyGUI$mySoundManager", "playSound", filePath);
            }
        
            ## Function to stop all playing sounds
            function stopAllSounds() {
                return VgSystemCall("components.MyGUI$mySoundManager", "stopAllSounds");
            }
        
            ## Function to play a sound looped a specified number of times
            function playSoundLoop(filePath, loopCount) {
                return VgSystemCall("components.MyGUI$mySoundManager", "playSoundLoop", filePath, loopCount);
            }
        
            ## Function to set the volume of the sound
            function setVolume(volumeLevel) {
                return VgSystemCall("components.MyGUI$mySoundManager", "setVolume", volumeLevel);
            }
    }

}
